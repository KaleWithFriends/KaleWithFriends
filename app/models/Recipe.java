package models;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToMany;

/**
 * Model for a recipe.
 *
 * Created by Jack on 4/4/2015.
 */
@Entity
public class Recipe extends play.db.ebean.Model {
  /** The id. */
  @Id
  private long id;

  /** The ingredients for this recipe. */
  @OneToMany(mappedBy = "ingredient", cascade = CascadeType.PERSIST)
  private ArrayList<TimedIngredient> timedIngredients;

  /** The name of the recipe. */
  private String name;
  /**A brief description of the recipe. */
  private String description;
  /** The steps to make the dish. */
  private ArrayList<String> procedure;
  /** The image file name. */
  private String imagePath = "images/kaluaPorkWithKale.jpg";

  /**
   * The EBean ORM finder method for database queries.
   * @return The finder method.
   */
  public static Finder<Long, Recipe> find() {
    return new Finder<Long, Recipe>(Long.class, Recipe.class);
  }

  /**
   * Creates a recipe object.
   *
   * @param name           The name of the recipe.
   * @param description    The description of the recipe.
   * @param timedIngredients    The list of ingredients needed for the recipe.
   * @param procedure      The directions to create the recipe.
   * @param imagePath      The file name for the image. Defaults to place holder image.
   */
  public Recipe(String name, String description, ArrayList<TimedIngredient> timedIngredients,
                ArrayList<String> procedure, String imagePath) {
    this.name = name;
    this.description = description;
    this.timedIngredients = timedIngredients;
    this.procedure = procedure;
    this.imagePath = imagePath;
  }

  /**
   * Gets the list of ingredients.
   *
   * @return the list of ingredients.
   */
  public ArrayList<Ingredient> getIngredients() {
    ArrayList<Ingredient> ingredients = new ArrayList<Ingredient>();

    for (TimedIngredient timedIngredient : getTimedIngredients()) {
      ingredients.add(timedIngredient.getIngredient());
    }

    return ingredients;
  }

  /**
   * Set the ingredient list.
   *
   * @param timedIngredients The ingredient list.
   */
  public void setTimedIngredients(ArrayList<TimedIngredient> timedIngredients) {
    this.timedIngredients = timedIngredients;
  }

  /**
   * Set the name.
   *
   * @param name The name.
   */
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Set the description.
   *
   * @param description The description.
   */
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * Set the procedure.
   *
   * @param procedure The list of procedures.
   */
  public void setProcedure(ArrayList<String> procedure) {
    this.procedure = procedure;
  }

  /**
   * Set the image path.
   *
   * @param imagePath The path to the image.
   */
  public void setImagePath(String imagePath) {
    this.imagePath = imagePath;
  }

  /**
   * Gets te name of the recipe.
   *
   * @return The name.
   */
  public String getName() {
    return name;
  }

  /**
   * Gets the description of the recipe.
   *
   * @return The description.
   */
  public String getDescription() {
    return description;
  }

  /**
   * Gets the list of incidents of the recipe.
   *
   * @return The list of ingredients.
   */
  public List<TimedIngredient> getTimedIngredients() {
    return TimedIngredient.find().where().eq("recipe", this).findList();
  }

  /**
   * Gets the directions to cook the recipe.
   *
   * @return The procedure.
   */
  public ArrayList<String> getProcedure() {
    return procedure;
  }

  /**
   * Gets the file name for the image.
   *
   * @return The image.
   */
  public String getImagePath() {
    return imagePath;
  }

  /**
   * Gets the id.
   *
   * @return The id.
   */
  public long getId() {
    return id;
  }

  /**
   * Sets the ID for the recipe. This value is generated by the RecipeDB.add function.
   *
   * @param id the id.
   */
  public void setId(long id) {
    this.id = id;
  }


}
